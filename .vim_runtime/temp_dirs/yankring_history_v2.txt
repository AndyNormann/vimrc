            usleep(200000);,V
#define KCYN  "\x1B[36m",V
#define KRED  "\x1B[31m",V
,V
stdio,v
            getchar();,V
        getchar();,V
        },V
            std::cout << data << std::endl;,V
        while(get(line, file)){,V
        file >> data;,V
        std::cout << data << std::endl;,V
                ,V
            std::cout << line << std::endl;,V
        while(getline(file, line)){,V
    struct Sudoku_t {,V
    string line;,V
    std::cout << file << std::endl;,V
ddlocal application = require "mjolnir.application",V
40 min long run on treadmill,V
20 min interval on bike,V
Day 1 (Cardio):,V
Side plank,V
noremap <C-s> :w<CR>,V
noremap <C-s> :w<CR>i,V
noremap <C-k> :w<CR>i,V
RRR,V
subtract,v
	public static int subtract(int[] tall) {		int sum = 0;			for(int i=0; i<tall.length; i++) {			sum -= tall[i];		}		return sum;	},V
private,v
void,v
 ,v
"mer tekst",v
mer tekst,v
		System.out.println("halla");		System.out.println("skjera");		System.out.println("mer tekst");,V
her er tekst,v
static ,v
public ,v
X,v
c,v
F,v
},V
#include <bits/ioctls.h>,V
#include <netinet/in.h>,V
    return 0;,V
{,V
int main(int argc, const char *argv[]),V
#include <stdio.h>,V
20 min run,V
L-sit(1 min x 3),V
Plank(1 min x 3),V
Close pushup(4 x 8),V
%s,v
count,v
count; i+,v
    int rv;,V
    char s[INET6_ADDRSTRLEN];,V
    int yes = 1;,V
    struct sigaction sa;,V
    socklen_t sin_size;,V
    struct sockaddr_storage their_addr;,V
    struct addrinfo hints, *servinfo, *p;,V
    dddddddddint sockfd, newfd;,V
",v
%d %d %d\n,v
    h3 = malloc(sizeof(struct hei));,V
h1.x = 1;h1.y = 2;h1.z = 5;,9
gddetaddrinfo(),V
-----------Mintermerm0 = ~a~b~c~dm1 = ~a~b~cdm2 = ~a~bc~dm3 = ~a~bcdm4 = ~ab~c~dm5 = ~ab~cdm6 = ~abc~dm7 = ~abcdm8 = a~b~c~dm9 = a~b~cdm10 = a~bc~dm11 = a~bcdm12 = ab~c~dm13 = ab~cdm14 = abc~dm15 = abcdf0 = m(13,14,15)f1 = m(7, 8, 9, 10, 11, 12)f2 = m(4, 5, 6, 10, 11, 12)f3 = m(2, 3, 5, 6, 8, 9, 12, 15)f4 = m(1, 3, 4, 6, 9, 11, 12, 14)f5 = m(2, 3, 6, 7, 10, 11, 14, 15)f6 = m(1, 3, 5, 7, 9, 11, 13, 15)f7 = 0----------Simplification--f0m13 = ab~cdm14 = abc~dm15 = abcdab       cd00 01 11 1000 0  0  0  001 0  0  1  011 0  0  1  0  10 0  0  1  0abd+abc--f1m7 = ~abcdm8 = a~b~c~dm9 = a~b~cd,V
-----------Mintermerm0 = ~a~b~c~dm1 = ~a~b~cdm2 = ~a~bc~dm3 = ~a~bcdm4 = ~ab~c~dm5 = ~ab~cdm6 = ~abc~dm7 = ~abcdm8 = a~b~c~dm9 = a~b~cdm10 = a~bc~dm11 = a~bcdm12 = ab~c~dm13 = ab~cdm14 = abc~dm15 = abcdf0 = m(13,14,15)f1 = m(7, 8, 9, 10, 11, 12)f2 = m(4, 5, 6, 10, 11, 12)f3 = m(2, 3, 5, 6, 8, 9, 12, 15)f4 = m(1, 3, 4, 6, 9, 11, 12, 14)f5 = m(2, 3, 6, 7, 10, 11, 14, 15)f6 = m(1, 3, 5, 7, 9, 11, 13, 15)f7 = 0----------Simplification--f0m13 = ab~cdm14 = abc~dm15 = abcdab       cd00 01 11 1000 0  0  0  001 0  0  1  011 0  0  1  0  10 0  0  1  0abd+abc--f1m7 = ~abcdm8 = a~b~c~dm9 = a~b~cdm10 = a~bc~dm11 = a~bcdm12 = ab~c~dabcd00 01 11 1000 0  0  1  101 0  0  0  111 0  1  0  110 0  0  0  1a~b+a~c~d+~abcd--f2m4 = ~ab~c~dm5 = ~ab~cdm6 = ~abc~dm10 = a~bc~dm11 = a~bcdm12 = ab~c~da~bc+b~c~d+~ab~c+~ab~d--f3m2 = ~a~bc~dm3 = ~a~bcdm5 = ~ab~cdm6 = ~abc~dm8 = a~b~c~dm9 = a~b~cdm12 = ab~c~dm15 = abcda~c~d+a~b~c+~a~bc+~ac~d+~ab~cd+abcd--f4m1 = ~a~b~cdm3 = ~a~bcdm4 = ~ab~c~dm6 = ~abc~dm9 = a~b~cdm11 = a~bcdm12 = ab~c~dm14 = abc~db~d+~bd--f5m2 = ~a~bc~dm3 = ~a~bcdm6 = ~abc~dm7 = ~abcdm10 = a~bc~dm11 = a~bcdm14 = abc~dm15 = abcdc--f6m1 = ~a~b~cdm3 = ~a~bcdm5 = ~ab~cdm7 = ~abcdm9 = a~b~cdm11 = a~bcdm13 = ab~cdm15 = abcdd--f700-------Final functionsf0 = abd+abcf1 = a~b+a~c~d+~abcdf2 = a~bc+b~c~d+~ab~c+~ab~df3 = a~c~d+a~b~c+~a~bc+~ac~d+~ab~cd+abcdf4 = b~d+~bdf5 = cf6 = df7 = 0,V
    connect();,V
|||||||||||||||||||||,1
    print_nr();,V
    printf("%d\n", c);,V
    c = getchar();,V
    assert(c!=NULL);,V
                ,1
    if(bind(sockfd, (struct sockaddr*) &serv, sizeof(serv)) < 0){        perror("failed 2 bind #50shadesofgrey");        return 2;    },V
   listen(sockfd, 5);,V
|||||||||||||||||,1
        close(sockfd);,V
0000000000000000,1
                   ,1
},v
Wide pushup(4 x 8),V
Verticle rows(4 x 8),V
typedef struct MSHHeader{    uint8_t TRAbits : 3;    uint8_t TTL : 4;    uint16_t PayloadLength : 9;    uint8_t src;    uint8_t dest;    char contents[0];} msg;,V
/* condition */,v
static int get_if_hwaddr(int sock, const char* devname, uint8_t hwaddr[6]){	struct ifreq ifr;	memset(&ifr, 0, sizeof(ifr));		assert(strlen(devname) < sizeof(ifr.ifr_name));	strcpy(ifr.ifr_name, devname);	if(ioctl(sock, SIOCGIFHWADDR, &ifr) < 0)	{		perror("ioctl");		return -1;	}	memcpy(hwaddr, ifr.ifr_hwaddr.sa_data, 6*sizeof(uint8_t));	return 0;},V
#include <string.h>#include <inttypes.h>#include <assert.h>#include <unistd.h>#include <arpa/inet.h>#include <sys/socket.h>#include <linux/if_packet.h>#include <net/ethernet.h>#include <net/if.h>#include <sys/ioctl.h>#include <bits/ioctls.h>,V
1 1 1 1 1 1 1 1 1,v
Planche(4 x 8),V
    m->,V
    } ,V
        printf("%d\n", cur->data);,V
    for(cur = root; cur->next != NULL; cur = cur->next){,V
    node* cur;,V
void print_list(node* root){,V
!Makefile,V
!*.h,V
